/* Problem 2:
    Even Fibonacci numbers 
    
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

pub fn solve(upper_limit: i32) -> i32 {

    0
}

fn fibonacci_sequence_to(upper_limit: i32) -> Vec<i32> {

    vec![1, 2, 3]
}

fn is_even(number: &i32) -> bool {

    true
}

#[cfg(test)]
mod p2_tests {
    use super::*;

    #[test]
    fn knows_when_even() {
        assert!( is_even(&2) );
        assert!( is_even(&4) );
        assert!( is_even(&76) );
        assert!( is_even(&4372108) );
    }

    #[test]
    fn knows_when_not_even() {
        assert!( !is_even(&1) );
        assert!( !is_even(&3) );
        assert!( !is_even(&75) );
        assert!( !is_even(&4372107) );
    }
    
    #[test]
    fn makes_correct_sequence() {
        assert_eq!(
            vec![1, 2, 3, 5, 8, 13, 21, 34, 55, 89],
            fibonacci_sequence_to(100),
        );
    }

    #[test]
    fn euler_example() {
        assert_eq!( 44, solve(100) );
    }
}